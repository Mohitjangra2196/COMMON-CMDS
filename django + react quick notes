Bilkul! Yeh rahe **Django + React Integration** ke liye concise notes

Hey team! Hum Django (backend) aur React (frontend) ko ek saath use karna seekh rahe hain. Yeh quick notes aapko basic setup aur integration samajhne mein help karenge.

---

### Hum Kya Bana Rahe Hain?

Ek simple web app jahan **Django** data dega (API ke through) aur **React** us data ko dikhayega.

---

### Prerequisites (Kya Hona Chahiye?)

* **Python** & **Pip**: Django ke liye.
* **Node.js** & **npm**: React ke liye.
* **VS Code**: Code likhne ke liye.

---

### Step 1: Django Backend Setup (API Banane Ke Liye)

1.  **Project Folder Banayein**:
    ```bash
    mkdir django-react-project
    cd django-react-project
    ```

2.  **Virtual Environment (Must-Do!)**: Dependencies ko alag rakhta hai.
    ```bash
    # Windows
    python -m venv venv
    venv\Scripts\activate

    # macOS/Linux
    python3 -m venv venv
    source venv/bin/activate
    ```

3.  **Django & DRF Install Karein**:
    ```bash
    pip install django djangorestframework
    ```

4.  **Django Project Banayein (`backend` naam se)**:
    ```bash
    django-admin startproject backend .
    ```

5.  **Django App Banayein (`api` naam se)**:
    ```bash
    python manage.py startapp api
    ```

6.  **`backend/settings.py` Configure Karein**: `INSTALLED_APPS` mein `'rest_framework'` aur `'api'` add karein.

---

### Step 2: Pehli Django API Banana

1.  **`api/views.py`**: Ek simple `MessageView` banayein jo kuch sample messages return kare. DRF ka `APIView` use karenge.
    ```python
    # Example snippet for idea
    from rest_framework.views import APIView
    from rest_framework.response import Response

    class MessageView(APIView):
        def get(self, request):
            messages = [{"id": 1, "text": "Hello from Django!"}]
            return Response(messages)
    ```

2.  **URLs Set Karein**:
    * `backend/urls.py`: `path('api/', include('api.urls'))` add karein.
    * `api/urls.py` (naya file): `path('messages/', MessageView.as_view())` add karein.

3.  **Test Django API**:
    ```bash
    python manage.py runserver
    ```
    Browser mein `http://127.0.0.1:8000/api/messages/` par check karein. JSON data dikhna chahiye.

---

### Step 3: React Frontend Setup

1.  **React App Banayein (`frontend` naam se)**: `manage.py` wali directory mein yeh command chalayein.
    ```bash
    npx create-react-app frontend
    ```

2.  **CORS Error Handle Karein (Very Important!)**:
    * React (port 3000) aur Django (port 8000) alag-alag ports par chalte hain, isliye CORS error aayega.
    * **Install**: `pip install django-cors-headers`
    * **`backend/settings.py` mein**:
        * `INSTALLED_APPS` mein `'corsheaders'` add karein.
        * `MIDDLEWARE` mein `'corsheaders.middleware.CorsMiddleware'` ko `CommonMiddleware` se *just upar* add karein.
        * File ke end mein `CORS_ALLOWED_ORIGINS = ["http://localhost:3000",]` add karein.

---

### Step 4: React ko Django se Jodna

1.  **Axios Install Karein**: API calls ke liye achha hai.
    ```bash
    cd frontend
    npm install axios
    ```

2.  **`frontend/src/App.js` Modify Karein**:
    * `useState` aur `useEffect` hooks use karein.
    * `useEffect` ke andar `axios.get('http://127.0.0.1:8000/api/messages/')` se Django API call karein.
    * Fetched messages ko state mein store karein aur `map` karke UI mein display karein.

---

### Step 5: Dono ko Ek Saath Chalana

1.  **Terminal 1 (Django Server)**: Project root folder (`manage.py` jahan hai) mein.
    ```bash
    python manage.py runserver
    ```

2.  **Terminal 2 (React Server)**: `frontend` folder ke andar.
    ```bash
    cd frontend
    npm start
    ```

3.  **Check Browser**: `http://localhost:3000` par ‡§ú‡§æ‡§è‡§Ç‡•§ ‡§Ü‡§™‡§ï‡•ã Django ‡§∏‡•á ‡§Ü‡§è ‡§π‡•Å‡§è messages dikhne chahiye!

---

**Congratulations! üéâ** Aapne successfully Django backend ko React frontend ke saath integrate kar liya hai. Yeh development setup hai. Production ke liye alag steps hote hain, par abhi ke liye this is perfect!

**Happy Coding!**
